/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * Nuit de l'info 2024 - Void LR - API Documentation
 * OpenAPI spec version: 1.0
 */
import { HttpResponse, delay, http } from 'msw';

export const getAuthControllerLoginMockHandler = (
  overrideResponse?:
    | void
    | ((
        info: Parameters<Parameters<typeof http.post>[1]>[0]
      ) => Promise<void> | void)
) => {
  return http.post('*/auth/login', async (info) => {
    await delay(1000);
    if (typeof overrideResponse === 'function') {
      await overrideResponse(info);
    }
    return new HttpResponse(null, { status: 201 });
  });
};

export const getAuthControllerLogoutMockHandler = (
  overrideResponse?:
    | void
    | ((
        info: Parameters<Parameters<typeof http.post>[1]>[0]
      ) => Promise<void> | void)
) => {
  return http.post('*/auth/logout', async (info) => {
    await delay(1000);
    if (typeof overrideResponse === 'function') {
      await overrideResponse(info);
    }
    return new HttpResponse(null, { status: 201 });
  });
};

export const getAuthControllerGetProfileMockHandler = (
  overrideResponse?:
    | void
    | ((
        info: Parameters<Parameters<typeof http.get>[1]>[0]
      ) => Promise<void> | void)
) => {
  return http.get('*/auth/profile', async (info) => {
    await delay(1000);
    if (typeof overrideResponse === 'function') {
      await overrideResponse(info);
    }
    return new HttpResponse(null, { status: 200 });
  });
};
export const getAuthMock = () => [
  getAuthControllerLoginMockHandler(),
  getAuthControllerLogoutMockHandler(),
  getAuthControllerGetProfileMockHandler(),
];
